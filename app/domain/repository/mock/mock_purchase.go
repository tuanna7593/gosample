// Code generated by MockGen. DO NOT EDIT.
// Source: purchase.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	entity "github.com/tuanna7593/gosample/app/domain/entity"
	repository "github.com/tuanna7593/gosample/app/domain/repository"
)

// MockPurchaseRepository is a mock of PurchaseRepository interface.
type MockPurchaseRepository struct {
	ctrl     *gomock.Controller
	recorder *MockPurchaseRepositoryMockRecorder
}

// MockPurchaseRepositoryMockRecorder is the mock recorder for MockPurchaseRepository.
type MockPurchaseRepositoryMockRecorder struct {
	mock *MockPurchaseRepository
}

// NewMockPurchaseRepository creates a new mock instance.
func NewMockPurchaseRepository(ctrl *gomock.Controller) *MockPurchaseRepository {
	mock := &MockPurchaseRepository{ctrl: ctrl}
	mock.recorder = &MockPurchaseRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPurchaseRepository) EXPECT() *MockPurchaseRepositoryMockRecorder {
	return m.recorder
}

// AssignTx mocks base method.
func (m *MockPurchaseRepository) AssignTx(txm repository.TransactionManager) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "AssignTx", txm)
}

// AssignTx indicates an expected call of AssignTx.
func (mr *MockPurchaseRepositoryMockRecorder) AssignTx(txm interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AssignTx", reflect.TypeOf((*MockPurchaseRepository)(nil).AssignTx), txm)
}

// Create mocks base method.
func (m *MockPurchaseRepository) Create(ctx context.Context, purchase *entity.Purchase) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, purchase)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockPurchaseRepositoryMockRecorder) Create(ctx, purchase interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockPurchaseRepository)(nil).Create), ctx, purchase)
}
